{
  "name": "Starter: Note Processor",
  "nodes": [
    {
      "parameters": {},
      "id": "d0b8f9e8-6c1f-4d1f-8c8e-1a2b3c4d5e6f",
      "name": "When clicking 'Test workflow'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "operation": "read",
        "fileSelector": "/notes/*.md"
      },
      "id": "a1b2c3d4-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
      "name": "Read Notes",
      "type": "n8n-nodes-base.readBinaryFiles",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "options": {}
      },
      "id": "b2c3d4e5-6f7a-8b9c-0d1e-2f3a4b5c6d7e",
      "name": "Convert to Text",
      "type": "n8n-nodes-base.moveData",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Extract metadata from notes\nconst items = $input.all();\n\nconst processed = items.map(item => {\n  const fileName = item.binary?.data?.fileName || 'unknown';\n  const content = Buffer.from(item.binary.data.data, 'base64').toString('utf8');\n  \n  // Extract hashtags\n  const tags = (content.match(/#[\\w]+/g) || []).map(tag => tag.slice(1));\n  \n  // Count words\n  const wordCount = content.split(/\\s+/).length;\n  \n  // Get first line as title\n  const title = content.split('\\n')[0].replace(/^#\\s*/, '');\n  \n  return {\n    json: {\n      fileName: fileName,\n      title: title,\n      tags: tags,\n      wordCount: wordCount,\n      content: content,\n      processedAt: new Date().toISOString()\n    }\n  };\n});\n\nreturn processed;"
      },
      "id": "c3d4e5f6-7a8b-9c0d-1e2f-3a4b5c6d7e8f",
      "name": "Extract Metadata",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    }
  ],
  "connections": {
    "When clicking 'Test workflow'": {
      "main": [[{ "node": "Read Notes", "type": "main", "index": 0 }]]
    },
    "Read Notes": {
      "main": [[{ "node": "Convert to Text", "type": "main", "index": 0 }]]
    },
    "Convert to Text": {
      "main": [[{ "node": "Extract Metadata", "type": "main", "index": 0 }]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}

